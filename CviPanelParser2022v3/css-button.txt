
1
text-shadow: 0px  -1px 0px rgba(0,0,0,.5);
Напишем другим способом, чтобы понять что здесь к чему:

1
text-shadow: x-offset y-offset blur color;



box-shadow: inset 1px 1px 0 #f5f5f5;

inset 0px 1px 0px rgba(255,255,255,.3), inset 0px 0px 3px rgba(255,255,255,.5);



Новое свойство box-shadow создает эффект тени. В нашем примере мы используем параметр inset, что позволяет добавить белую окантовку шириной в 1 пиксель в верхней части кнопки, но не выходя за пределы границы кнопки.

Для увеличения контрастности добавим темный цвет в нижней части кнопки.


border-bottom-color:#196ebb;
Кнопка с тенью

Тень для текста
И, наконец, последний штрих. Добавим для красоты тень не только к кнопке, но и для текста внутри кнопки.


text-shadow: 0 -1px 0 #196ebb;



style: 'z-index: 9816;opacity: 0.7 ;border: 1px dotted #000000;;
background : #1000000 ;background-color: #1000000 ;
background-image: linear-gradient( to top left, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) 30%, rgba(0, 0, 0, 0) ); ',




Ext.create('Ext.Container', {
    fullscreen: true,
    padding: 10,
    items: {
        xtype: 'button',
        text: 'My Button',
        badgeText: '2',
        style: 'opacity: 0.7;color:#F0FFFF; border: 1px solid #000000;background-color: #303030;background-image: linear-gradient(    to top left,    rgba(0, 0, 0, 0.2),    rgba(0, 0, 0, 0.2) 30%,    rgba(0, 0, 0, 0)  );box-shadow: inset 1px 1px 2px rgba(255, 255, 255, 0.6), inset -1px -1px 2px rgba(0, 0, 0, 0.6);'
    }
});



Azure	F0FFFF	240,255,255
Black	000000	0,0,0



Ext.create('Ext.Container', {
    fullscreen: true,
    padding: 10,
    items: {
        xtype: 'button',
        text: 'My Button',
        badgeText: '2',
        style: 'color:#F0FFFF; border: 1px solid #303030;background-color: #303030;background-image: linear-gradient(    to top left,    rgba(0, 0, 0, 0.2),    rgba(0, 0, 0, 0.2) 30%,    rgba(0, 0, 0, 0)  );box-shadow: inset 1px 1px 2px rgba(255, 255, 255, 0.6), inset -1px -1px 2px rgba(0, 0, 0, 0.6);'
    }
});





        background-image: linear-gradient(rgba(0,0,0,0), rgba(0,0,0,.1));
        border-radius: 3px;
        color: rgba(0,0,0,.6);
        text-shadow: 0 1px 1px rgba(255,255,255,.7);
        box-shadow: 0 0 0 1px rgba(0,0,0,.2), 0 1px 2px rgba(0,0,0,.2), inset 0 1px 2px rgba(255,255,255,.7);





Ext.create('Ext.Container', {
    fullscreen: true,
    padding: 10,
    items: {
        xtype: 'button',
        text: 'My Button',
        badgeText: '2',
        style: 'color:#303030; border: 1px solid #303030;background-color: #303030;background-image: linear-gradient(    to top left,    rgba(0, 0, 0, 0.2),    rgba(0, 0, 0, 0.2) 30%,    rgba(0, 0, 0, 0)  );box-shadow: inset 2px 2px 3px rgba(255, 255, 255, 0.6), inset -2px -2px 3px rgba(0, 0, 0, 0.6);'
    }
});




.styled {
  border: 1;
  color: #fff;
  border-radius: 2px;
  background-color: rgba(220, 0, 0, 1);
  background-image: linear-gradient(to top left, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) 30%, rgba(0, 0, 0, 0) );
  box-shadow: inset 2px 2px 3px rgba(255, 255, 255, 0.6), inset -2px -2px 3px rgba(0, 0, 0, 0.6);
}





Ext.create('Ext.Container', {
    fullscreen: true,
    padding: 10,
    items: {
        xtype: 'button',
        text: 'My Button',
        badgeText: '2',
        style: 'background-image: linear-gradient(to left,transparent,#00c6ff);background-position: 100% 0;border: 1px solid #00C6FF;box-sizing: border-box;'
    }
});






var button = Ext.create('Ext.Button', {
    text: '      '
});
Ext.Viewport.add({ xtype: 'container', padding: 10, items: [button] });




var button = Ext.create('Ext.Button', {
    iconCls: 'refresh'
});
Ext.Viewport.add({ xtype: 'container', padding: 10, items: [button] });


    fullscreen: true,
    padding: 10,
    items: {
        xtype: 'button',
        text: 'My Button',
        badgeText: '2'
    }


    fullscreen: true,
    padding: 4,
    defaults: {
        xtype: 'button',
        margin: 5
    },
    layout: {
        type: 'vbox',
        align: 'center'
    },
    items: [
        { ui: 'normal', text: 'normal' },
        { ui: 'round', text: 'round' },
        { ui: 'action', text: 'action' },
        { ui: 'decline', text: 'decline' },
        { ui: 'confirm', text: 'confirm' }
    ]
Ext.create('Ext.Container', {
    renderTo: Ext.getBody(),
    items   : [
        {
            xtype: 'button',
            text : 'My Button',
            align : 'left',
width : 300,
border : true,
style: 'background-color: #5E66CC',
margin: '0 0 0 0',
glyph: 'x48' 
        }
    ]
});
