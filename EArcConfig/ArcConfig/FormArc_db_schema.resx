<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>290, 17</value>
  </metadata>
  <metadata name="dataSet2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>387, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAC6XAAAulwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD9xbcA/cW3AP3FtwD9xbcB/cW3Af3FtwD/z8AAPCMeAEonGAE/HxIAOx0QFEMi
        FF06HBATPh8SAE0qGgH7qWUA/JJaAtCUWQP/s20A/3dMAP8AAADinl8D86NhBOqUWgHvnF4A7JNZAAAA
        AAAAAAAAAAAAAAAAAAD9xLcA/cW3AP3EtQD+w7QA/ca4A/zJvAH6zcIA/ca4A7OFeAHLbkQA/8KMAEIh
        FFdYMCDdaDsp/1gwINtBIRNUUEtIANyVWwS5eUcC9oxUAP2fYT3jj1ee75BYL+CKVADkjVYB/5ZdAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP3FtwD9xbcA/cW3AfzFtwL+uacA/bajDP63pBD+u6kAk2VVBlAp
        GABYMCCGaDsp/4NNN/qLUjv7g003+mk8Kf9ZMiGAdUEqAOp2Sx7ZhVKhx4NR/apvRv/FglD5441WjfGS
        WZjkiFQp6I1WAOeIVAIAAAAAAAAAAAAAAAAAAAAAAAAAAP+4pAD9498B//DtAP/BsUv9y7/Y/Mm95/7B
        sWK8b1QFh043AH9KNU2JUTrrhk85/4VOOP2GTzn/gEs32Y1ON0j0lVts+atm8saIU/+eZUH8qW1F96Vr
        RPzCg1H/8KNh5OeAUCnvilUA6IpVAgAAAAAAAAAAAAAAAAAAAAD9xbcB/7ahAPmzoAP+x7qu+MzB/+/S
        zP7439v++dDH//zHusj4va4T0paCAI5VPhOHUDmUfko244VKNn74lVtX4pNZzL1+Tv/UlVr96qZj+eOg
        YPy8fk7/zo1W7u+rZm7//5UEAAAAAPKkYgL/4IIA//OLANFVOQAAAAAAAAAAAPrQxgH/uqgA+6yWB/nZ
        09fy29f/yKOY/Mahlfzbvbb/+tzX7/jGuhz///8Azpx8BP+nYwD/ml8z3otVqLh3Sv2zeEv/y4xV+Zlf
        PfuTWjv/4aBg/f+8b5zvt20a8aZjAPOjYQXyoGAD/75wAOB4SwDRVTkA0VU5AAAAAAAAAAAA1f//APbf
        2wHz3tsA59TQC/vj34Phw7v227qy/e/Uzpj/7u0V////AP+bJwD/q2kR7ZZckbt3SvidZED/pGpD+6lt
        Rfmma0T+wIFQ/+ekYrX7vWwr//+pAP+6cALppmQG9Lh5APm+fwvpn2QW/L95AP3AeAGkTzkAAAAAAAAA
        AAD/vKsA/7qoAP28qwD/3dUB//DvAP7x8Cj/8/Iy/+rpAOWzjAPjo1sA9Zhdac2EUfOtcUf/pm1F/atv
        Rvmqbkb8uHpM/9uaXdj/xnNNTykbQWU3J7V4RjHhZDcmfsJ7RgD4s3A9/bZl1O2NVNg1AAAFgQAAANhW
        OQEAAAAAAAAAAPbd2QD23dkA9t3ZAPbd2QH23dkD/+/sAP///wDuy8IE8MeyBrCpAAD0qmdSwINQ2Jph
        Pv+kaUP9s3ZK/8yMVfjxsGh+d1YwKlswI6B/SzX/hU03/nA+Lv+QWj/m+q5gqPywYf73xY//p25T5XMA
        AAx8AAAAplE4AQAAAAAAAAAAAAAAAAAAAAD23dkA9t3ZAPLs7wD14d8C+dTMBPvKvgL8yLsA/daJAf//
        /wD///kF2pteacOEUevjoGCx//6VGjoWFRp3RTH0h1A5/3hEMfx6SDP8sHVG/feuYPz7xYT//ebO+/n6
        +/+FYVPmPgAADEoAAAB/TTgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPqyngDiFwAAyQAAAfzD
        tWv9wrSs+qKJK/upoQD//wAA/+CJDea+cwWYZkUAo2hEGIJKN7F6RzXqomE+/+qZVP7/wnX//Niz/fzM
        wPv/+/v9+vv7/4tkVedJAAANUwAAAIZOOAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9xrkC/cKzAPzC
        tCn+zMDV+NTM/+vLxP7/zcL8+7urif///wCviZMB46FkBPSrYwT1qWIA+bp1L/CpXtb9rWb//sug/fr8
        9f/8n43/+2A9///6+P76/f3/imRV6UkAAA1TAAAAhU44AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPrQ
        xwL/29EA/9vQMOzPyefEpZ3/sZCF/Ne8tv/71c2Y////APbSqQP+wHgA/cOEGfuxZJ/5sGH//smO/+/b
        x/+tjoP/6ubl//+SeP/8qJX//////vv7+/+LZVXpSgAADlMAAACFTjgBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHVOPwJeNSYAbEY3H49jU9CValrogVZGhYZUQgC3ekwG/bRmAP64azz7r1/z+r16//nZ
        vPz////9uJqP/3EvFf/u5eL///v6//79/f/////++vr6/4tlVehLAAAOVAAAAIVOOAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8yb0ALAQAASYAAABcNCQabDsnkm49KqBjNSJiRxMAAMOKWwf0sGkA9K9oevrU
        qv/+8u72/LKl///m3v/Qv7f/1cO8/////////f3//vz8//79/f77/Pz/imVW508AAA9XAAAAhU44AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbd2QBdMyMBWDAgAFoyIxpxQC2acUAtpGk8Kmh3Qy8AlXZpB6yZ
        kACRdWh39Pf3///j3Pv9p5L//u/r/////////v3//tjP//zWzv/9///+////+uPe3P+DWEblcQsACmcG
        AACFTjgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFsxIQFWLh4AVS0dGXA/LJhwQCykZzknZndE
        MACSc2cHppSMAIhvZnnz8fD///j2+/729P/+/v7//ePb//C6q//1tqb//9bN/vb4+P20n5b/ek0633tB
        KU1gHwUAcTokAoVOOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWzEhAVYuHgBVLR0ZcD8smHA/
        LKRnOSdmd0QwAJJzZwemlIwAinFnePPw7//////7//Pw//fHuv/XnIr/0puK/+iunv70ysD/iGRV8mYp
        EX1+JAALXAAAAG4pDQGFTjgAhU44AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbMSEBVy4eAFUt
        HRlwPyyYcD8spGc5J2Z3RDAAknJmB6WSiwCJcGZ38/Du//////v5zsP/05eF/9agkP/krZ3+/8u+/+++
        sep5RTAngmNXAIphUgN+SjUDZj8vAGI7KwCFTjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFsx
        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
        CX/9CCJ//QBJ//0BF//9BF///Qk///6S//8=
</value>
  </data>
</root>