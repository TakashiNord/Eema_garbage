<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EXDATA_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj AS id_node, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE  is_exdata = 1
 UNION
SELECT ID, id_obj AS id_node, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list , MEAS_ARC
WHERE  is_exdata = 1
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC   </value>
    <comment>exdata_list_v</comment>
  </data>
  <data name="ELREG_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias , 0 as  ID_GINFO
FROM meas_list
WHERE id_meas_type IN (
 -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
 SELECT ID FROM ELREG_TLIST_V
) AND is_exdata = 0
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias , MEAS_ARC.ID_GINFO  as  ID_GINFO
FROM meas_list , MEAS_ARC
WHERE id_meas_type IN (
  -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
  SELECT ID FROM ELREG_TLIST_V
) AND is_exdata = 0
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC  </value>
  </data>
  <data name="PHREG_LIST_V" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (
   -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t
   -- WHERE m.id_type = t.ID
   --   AND t.id_node &lt;&gt; 1
   --   AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
   --   AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
   --   AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
   --   AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   SELECT ID FROM phreg_tlist_v
   ) AND is_exdata = 0
  UNION
  SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list, MEAS_ARC
    WHERE id_meas_type IN (
  -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t
  --  WHERE m.id_type = t.ID
  --    AND t.id_node &lt;&gt; 1
  --    AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
  --   AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
  --    AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
  --    AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   SELECT ID FROM phreg_tlist_v
   ) AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC   </value>
  </data>
  <data name="AUTO_LIST_V" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
      AND is_exdata = 0
  UNION
    SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list , MEAS_ARC
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
      AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="PSWT_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
AND is_exdata = 0
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list, MEAS_ARC
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
 AND is_exdata = 0
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
ORDER BY ID ASC </value>
  </data>
  <data name="EA_CHANNELS" xml:space="preserve">
    <value>   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM EA_CHANNELS
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , EA_ARC.ID_GINFO as ID_GINFO
     FROM EA_CHANNELS, EA_ARC
   WHERE
   EA_CHANNELS.ID=EA_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="CALC_LIST" xml:space="preserve">
    <value>   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM CALC_LIST
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , CALC_ARC.ID_GINFO as ID_GINFO
     FROM CALC_LIST , CALC_ARC
   WHERE
   CALC_LIST.ID=CALC_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="DG_LIST" xml:space="preserve">
    <value>   SELECT ID, id_node, 0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM DG_LIST
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , DG_ARC.ID_GINFO as ID_GINFO
     FROM DG_LIST , DG_ARC
   WHERE
   DG_LIST.ID=DG_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="EA_V_CONSUMER_POINTS" xml:space="preserve">
    <value>   SELECT ea_points.ID, ea_points.id_node,
          ea_points.id_type, ea_points.NAME,
          ea_points.alias, 0 as ID_GINFO
     FROM ea_channels ea_points, ea_consumer_link
    WHERE ea_points.ID = ea_consumer_link.id_point(+)
    UNION
   SELECT ea_points.ID, ea_points.id_node,
          ea_points.id_type, ea_points.NAME,
          ea_points.alias, EA_ARC.ID_GINFO as ID_GINFO
     FROM ea_channels ea_points, ea_consumer_link, EA_ARC
    WHERE ea_points.ID = ea_consumer_link.id_point(+)
 AND ea_points.ID = EA_ARC.ID_PARAM
  ORDER BY ID ASC </value>
  </data>
  <data name="DA_V_LST" xml:space="preserve">
    <value>   SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID,
          (CASE
              WHEN REGEXP_LIKE (gt.define_alias, 'ANALOG')
                 THEN 'ТИ'
              WHEN REGEXP_LIKE (gt.define_alias, 'TELECONTROL')
                 THEN 'ТУ'
              WHEN REGEXP_LIKE (gt.define_alias, 'BOOL')
                 THEN 'ТС'
              ELSE '??'
           END
          ) AS ID_TYPE,
          {0}.NAME,
          0 as ID_GINFO
     FROM DA_CAT 
     JOIN {0} ON DA_CAT.ID = {0}.ID_NODE
     JOIN da_param da ON da.ID =  {0}.ID  
     JOIN da_dev_desc dd ON dd.ID = da.id_point
     LEFT JOIN sys_gtopt gt ON gt.ID = dd.id_gtopt
UNION
   SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID,
          (CASE
              WHEN REGEXP_LIKE (gt.define_alias, 'ANALOG')
                 THEN 'ТИ'
              WHEN REGEXP_LIKE (gt.define_alias, 'TELECONTROL')
                 THEN 'ТУ'
              WHEN REGEXP_LIKE (gt.define_alias, 'BOOL')
                 THEN 'ТС'
              ELSE '??'
           END
          ) AS ID_TYPE,
          {0}.NAME,
          DA_ARC.ID_GINFO as ID_GINFO
     FROM DA_CAT 
     JOIN {0} ON DA_CAT.ID = {0}.ID_NODE
     JOIN DA_ARC ON {0}.ID = DA_ARC.ID_PARAM
     JOIN da_param da ON da.ID = {0}.ID  
     JOIN da_dev_desc dd ON dd.ID = da.id_point
     LEFT JOIN sys_gtopt gt ON gt.ID = dd.id_gtopt
ORDER BY ID_NODE, ID</value>
  </data>
  <data name="ARC_GINFO1" xml:space="preserve">
    <value>SELECT
    ARC_GINFO.ID as ID,
    sys_gtopt.NAME as VIEW_ARCHIVE,
    ARC_GINFO.ID_GTOPT ,
    sys_gtopt.DEFINE_ALIAS as DEFINE_ALIAS,
    ARC_TYPE.NAME as TYPE_ARCHIVE,
    ARC_GINFO.ID_TYPE as ID_TYPE,
    ARC_GINFO.DEPTH ,
    ARC_GINFO.DEPTH_LOCAL ,
    ARC_GINFO.CACHE_SIZE ,
    ARC_GINFO.CACHE_TIMEOUT ,
    ARC_GINFO.FLUSH_INTERVAL ,
    ARC_GINFO.RESTORE_INTERVAL ,
    ARC_GINFO.STACK_INTERVAL ,
    ARC_GINFO.WRITE_MINMAX  ,
    ARC_GINFO.RESTORE_TIME ,
    ARC_GINFO.NAME  ,
    ARC_GINFO.STATE  ,
    ARC_GINFO.DEPTH_PARTITION  ,
    ARC_GINFO.RESTORE_TIME_LOCAL
 FROM ARC_GINFO , sys_gtopt, ARC_TYPE
 WHERE sys_gtopt.ID=ARC_GINFO.ID_GTOPT
AND ARC_GINFO.ID_TYPE=ARC_TYPE.ID
ORDER BY ARC_GINFO.ID ASC</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE1" xml:space="preserve">
    <value>SELECT  ARC_SUBSYST_PROFILE.ID,ARC_SUBSYST_PROFILE.ID_TBLLST,ARC_SUBSYST_PROFILE.ID_GINFO,
  ARC_SUBSYST_PROFILE.IS_WRITEON, ARC_SUBSYST_PROFILE.STACK_NAME,ARC_SUBSYST_PROFILE.LAST_UPDATE,ARC_SUBSYST_PROFILE.IS_VIEWABLE
FROM  ARC_SUBSYST_PROFILE
WHERE  {0}=ARC_SUBSYST_PROFILE.ID_TBLLST</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE2" xml:space="preserve">
    <value>SELECT  a.ID, a.ID_GINFO,a.IS_WRITEON, ARC_GINFO.NAME, SYS_GTOPT.NAME
FROM  ARC_SUBSYST_PROFILE a, ARC_GINFO, SYS_GTOPT
WHERE a.ID_GINFO=ARC_GINFO.ID
AND SYS_GTOPT.ID=ARC_GINFO.ID_GTOPT 
AND a.ID_TBLLST={0}</value>
  </data>
  <data name="ARH_SYSTBLLST1" xml:space="preserve">
    <value>SELECT upper(lst.table_name) , lnk.ID_LSTTBL
FROM sys_tbllst lst, sys_tbllnk lnk, sys_otyp t
WHERE lnk.id_dsttbl = lst.ID  AND lst.id_type = t.ID AND t.define_alias LIKE 'ARH'
 AND  lnk.id_lsttbl = {0}</value>
  </data>
  <data name="TABLEOPTION" xml:space="preserve">
    <value>SELECT 'min' as num, TIME1970 as T FROM {0} WHERE TIME1970 = (SELECT MIN(TIME1970) FROM {0} )
union
SELECT 'max' as num, TIME1970 as T FROM {0}  WHERE TIME1970 = (SELECT MAX(TIME1970) FROM {0} )
union
SELECT 'cnt' as num, count(*) as T FROM {0}</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE_ID" xml:space="preserve">
    <value>SELECT ID+1 FROM ARC_SUBSYST_PROFILE WHERE ID+1 NOT IN (SELECT ID FROM ARC_SUBSYST_PROFILE )</value>
  </data>
  <data name="AD_SERVICE1" xml:space="preserve">
    <value>SELECT  ad_pinfo.portnumber,ad_pinfo.id_proto,ad_sinfo.id_lsttbl,ad_list.id_type, sys_otyp.alias,ad_service.NAME,ad_service.define_alias
 FROM ad_dir,ad_dir dir1,ad_list,ad_pinfo,ad_ncard,ad_sinfo,sys_otyp,ad_service,ad_hosts
 WHERE ad_sinfo.id_server_node = ad_dir.ID
 AND ad_list.id_node = ad_dir.ID
 AND ad_pinfo.id_param = ad_list.ID
 AND ad_pinfo.id_intrface_node = ad_ncard.id_node
 AND ad_list.id_type = sys_otyp.ID
 AND ad_pinfo.portnumber = ad_service.ID
 AND ad_pinfo.id_intrface_node = dir1.ID
 AND dir1.id_parent = ad_hosts.id_host_node
 AND ad_pinfo.id_proto &gt; 2 AND ad_pinfo.id_proto &lt;&gt; 9
 AND ad_dir.ID IN (SELECT ad_dir.ID FROM ad_dir WHERE ad_dir.id_type &gt; 1000)
 AND ad_sinfo.ID_LSTTBL= {0}
  UNION
 SELECT  ad_pinfo.portnumber,ad_pinfo.id_proto,ad_sinfo.id_lsttbl,ad_list.id_type, sys_otyp.alias,ad_service.NAME,ad_service.define_alias
 FROM ad_dir,ad_dir dir1,ad_list,ad_pinfo,ad_ipinfo,ad_sinfo,sys_otyp,ad_service,ad_hosts
  WHERE ad_sinfo.id_server_node = ad_dir.ID
 AND ad_list.id_node = ad_dir.ID
 AND ad_pinfo.id_param = ad_list.ID
 AND ad_pinfo.id_intrface_node = ad_ipinfo.id_node
 AND ad_list.id_type = sys_otyp.ID
 AND ad_pinfo.portnumber = ad_service.ID
 AND ad_pinfo.id_intrface_node = dir1.ID
 AND dir1.id_parent = ad_hosts.id_host_node
 AND ((ad_pinfo.id_proto &lt;= 2) OR (ad_pinfo.id_proto = 9))
 AND ad_dir.ID IN (SELECT ad_dir.ID FROM ad_dir WHERE ad_dir.id_type &gt; 1000)
 AND ad_sinfo.ID_LSTTBL={0} </value>
  </data>
  <data name="SCHEMA_NAME" xml:space="preserve">
    <value>SELECT DISTINCT a.id ,  sch.schema_name
FROM  arc_db_schema sch, arc_services_info si,  sys_tbllst a
WHERE a.ID = si.id_lsttbl AND si.id_db_schema = sch.ID and a.ID ={0}</value>
  </data>
  <data name="TABLE_ARC" xml:space="preserve">
    <value>SELECT  a.table_name
FROM   sys_tbllst a, SYS_TBLLNK b
WHERE  b.ID_DSTTBL=a.id and a.DEFINE_ALIAS like '%ARH%' and b.ID_LSTTBL={0}</value>
  </data>
  <data name="ARC_GINFO2" xml:space="preserve">
    <value>SELECT ID_GTOPT  FROM ARC_GINFO WHERE ID={0}</value>
  </data>
  <data name="arc_stat_avg_v" xml:space="preserve">
    <value>   SELECT   from_dt1970 (arc_subsyst_profile.last_update) last_update,
            arc_stat.avg_process, arc_stat.avg_insert, arc_stat.avg_row,
            arc_stat.avg_error, sys_gtopt.alias opt_alias,
            sys_tbllst.table_name tbl_name
       FROM sys_tbllst, sys_gtopt, arc_stat, arc_ginfo, arc_subsyst_profile
      WHERE sys_tbllst.ID = arc_stat.id_tbllst
        AND sys_gtopt.ID = arc_ginfo.id_gtopt
        AND arc_stat.id_ginfo = arc_ginfo.ID
        AND arc_subsyst_profile.id_tbllst = arc_stat.id_tbllst
        AND arc_subsyst_profile.id_ginfo = arc_stat.id_ginfo
   ORDER BY arc_stat.id_tbllst, arc_stat.id_ginfo</value>
  </data>
  <data name="arc_stat_current_v" xml:space="preserve">
    <value>  SELECT   from_dt1970 (arc_subsyst_profile.last_update) last_update,
            arc_stat.cur_process, arc_stat.cur_insert, arc_stat.cur_row,
            arc_stat.cur_error, sys_gtopt.alias opt_alias,
            sys_tbllst.table_name tbl_name
       FROM sys_tbllst, sys_gtopt, arc_stat, arc_ginfo, arc_subsyst_profile
      WHERE sys_tbllst.ID = arc_stat.id_tbllst
        AND sys_gtopt.ID = arc_ginfo.id_gtopt
        AND arc_stat.id_ginfo = arc_ginfo.ID
        AND arc_subsyst_profile.id_tbllst = arc_stat.id_tbllst
        AND arc_subsyst_profile.id_ginfo = arc_stat.id_ginfo
   ORDER BY arc_stat.id_tbllst, arc_stat.id_ginfo</value>
  </data>
  <data name="arc_retroviewable_v" xml:space="preserve">
    <value>   SELECT p.id_tbllst, db.NAME AS tbllst_name, t.NAME AS tbllst_tblname,
          ta.NAME AS arc_tblname, ag.id_gtopt, gt.NAME AS gtopt_name,
          gt.alias AS gtopt_alias, gt.INTERVAL AS gtopt_interval, p.id_ginfo,
          ag.NAME AS ginfo_name, acc.retro_depth
     FROM arc_subsyst_profile p,
          sys_db_part db,
          sys_tbllst t,
          sys_tbllst ta,
          sys_tbllnk tlnk,
          arc_ginfo ag,
          sys_gtopt gt,
          arc_services_access acc
    WHERE t.ID = p.id_tbllst
      AND db.ID = t.id_node
      AND tlnk.id_lsttbl = p.id_tbllst
      AND ta.ID = tlnk.id_dsttbl
      AND ta.id_type = 1021
      AND ag.ID = p.id_ginfo
      AND gt.ID = ag.id_gtopt
      AND p.ID = acc.id_sprofile(+)
      AND is_viewable = 1</value>
  </data>
  <data name="DA_V_LST_TMP" xml:space="preserve">
    <value>SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID, {0}.ID_TYPE, {0}.NAME, 0 as ID_GINFO
FROM {0}, DA_CAT
WHERE
 DA_CAT.ID={0}.ID_NODE
UNION
SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID, {0}.ID_TYPE, {0}.NAME, DA_ARC.ID_GINFO as ID_GINFO
FROM {0}, DA_CAT, DA_ARC
WHERE {0}.ID=DA_ARC.ID_PARAM
and DA_CAT.ID={0}.ID_NODE
ORDER BY ID_NODE, ID </value>
  </data>
  <data name="ARC_SUBSYST_PROFILE3" xml:space="preserve">
    <value>SELECT  a.ID, a.ID_GINFO, a.IS_WRITEON 
FROM  ARC_SUBSYST_PROFILE a
WHERE {0}=a.ID_TBLLST AND a.ID_GINFO={1}</value>
  </data>
  <data name="FormSERVICE1" xml:space="preserve">
    <value>SELECT arcs.ID_SERVICE, ads.NAME , arcs.PRIORITY
FROM ARC_SERVICES_TUNE arcs, AD_SERVICE ads 
WHERE ads.ID=arcs.ID_SERVICE and arcs.ID_SPROFILE={0}
union
SELECT arcs.ID_SERVICE, '?????????????????' as NAME , 0 as PRIORITY
FROM ARC_SERVICES_TUNE arcs, AD_SERVICE ads 
WHERE arcs.ID_SERVICE not in (SELECT id FROM AD_SERVICE)
and arcs.ID_SPROFILE={0}</value>
  </data>
  <data name="FormSERVICE2" xml:space="preserve">
    <value>SELECT arcs.ID_SERVICE, ads.NAME , arcs.RETRO_DEPTH
FROM ARC_SERVICES_ACCESS arcs, AD_SERVICE ads 
WHERE ads.ID=arcs.ID_SERVICE and arcs.ID_SPROFILE={0}
union
SELECT arcs.ID_SERVICE, '?????????????????' as NAME , 0 as RETRO_DEPTH
FROM ARC_SERVICES_ACCESS arcs, AD_SERVICE ads 
WHERE arcs.ID_SERVICE not in (SELECT id FROM AD_SERVICE)
and arcs.ID_SPROFILE={0}</value>
  </data>
  <data name="ARH_SYSTBLLST2" xml:space="preserve">
    <value>select DISTINCT y.ID id_tbllst, y.table_name lst_tblname, x.table_name arc_tblname, sch.SCHEMA_NAME
               from sys_tbllst x, sys_tbllst y, sys_tbllnk st, sys_otyp ot, arc_db_schema sch, arc_services_info si
              where y.ID = st.id_lsttbl
                and x.ID = st.id_dsttbl
                and x.id_type = ot.id
                and ot.define_alias = 'ARH'
                and si.ID_DB_SCHEMA = sch.ID
                and si.ID_LSTTBL = y.ID
                and y.ID = {0}
              order by y.id</value>
  </data>
  <data name="TABLE_ARC1" xml:space="preserve">
    <value>SELECT upper(lst.TABLE_NAME) FROM sys_tbllst lst WHERE lst.ID={0}</value>
  </data>
  <data name="PHREG_LIST_V1" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (
   -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t
  --  WHERE m.id_type = t.ID
  --    AND t.id_node &lt;&gt; 1
 --     AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
   --   AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
  --    AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
  --    AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   SELECT ID FROM phreg_tlist_v
   ) 
  UNION
  SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list, MEAS_ARC
    WHERE id_meas_type IN (
 --  SELECT m.ID FROM sys_meas_types m, sys_ptyp t
 --   WHERE m.id_type = t.ID
 --     AND t.id_node &lt;&gt; 1
 --     AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
 --     AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
 --     AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
 --     AND m.define_alias NOT LIKE ('MEAS_START_STOP')
  SELECT ID FROM phreg_tlist_v
   ) 
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC   </value>
  </data>
  <data name="ELREG_LIST_V1" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias , 0 as  ID_GINFO
FROM meas_list
WHERE id_meas_type IN (
  -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
 SELECT ID FROM ELREG_TLIST_V
) 
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias , MEAS_ARC.ID_GINFO  as  ID_GINFO
FROM meas_list , MEAS_ARC
WHERE id_meas_type IN (
  -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
  SELECT ID FROM ELREG_TLIST_V
) 
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC  </value>
  </data>
  <data name="PSWT_LIST_V1" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list, MEAS_ARC
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
ORDER BY ID ASC </value>
  </data>
  <data name="AUTO_LIST_V1" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
  UNION
    SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list , MEAS_ARC
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="GTOPT2" xml:space="preserve">
    <value>SELECT sgt.ID, sgt.NAME, sgt.ALIAS, sgt.DEFINE_ALIAS, sgt.INTERVAL, 
sgtp.NAME as GTYP, sgtp.DEFINE_ALIAS as GTYPD, 
sat.NAME AS ATYP , sat.DEFINE_ALIAS AS ADEF 
FROM SYS_GTOPT sgt, SYS_GTYP sgtp, SYS_ATYP sat 
WHERE sgt.ID_GTYPE = sgtp.ID and sgt.ID_ATYPE = sat.ID 
UNION 
SELECT sgt.ID, sgt.NAME, sgt.ALIAS, sgt.DEFINE_ALIAS, sgt.INTERVAL, 
sgtp.NAME as GTYP, sgtp.DEFINE_ALIAS as GTYPD, 
'' AS ATYP , '' AS ADEF
FROM SYS_GTOPT sgt, SYS_GTYP sgtp  
WHERE sgt.ID_GTYPE = sgtp.ID and ( sgt.ID_ATYPE='' or sgt.ID_ATYPE is NULL )</value>
  </data>
  <data name="GTOPT1" xml:space="preserve">
    <value>SELECT 
  SYS_GTOPT.ID
  ,SYS_GTOPT.NAME
  ,SYS_GTYP.DEFINE_ALIAS as \"DataType\" 
  ,SYS_GTOPT.INTERVAL as \"Interval (sec)\"
  ,'0' as \"Archive Type\" 
FROM SYS_GTOPT, SYS_GTYP 
WHERE SYS_GTOPT.ID_ATYPE is null and SYS_GTYP.id=SYS_GTOPT.ID_GTYPE 
 union 
SELECT 
  SYS_GTOPT.ID
  ,SYS_GTOPT.NAME
  ,SYS_GTYP.DEFINE_ALIAS as \"DataType\" 
  ,SYS_GTOPT.INTERVAL as \"Interval (sec)\" 
  ,SYS_ATYP.NAME as \"Archive Type\" 
FROM SYS_GTOPT , SYS_ATYP, SYS_GTYP 
WHERE SYS_GTOPT.ID_ATYPE=SYS_ATYP.ID  and SYS_GTYP.id=SYS_GTOPT.ID_GTYPE 
</value>
  </data>
  <data name="ARH_SYSTBLLST3" xml:space="preserve">
    <value>select DISTINCT y.ID id_tbllst, sch.SCHEMA_NAME, ast.DEFINE_ALIAS
from sys_tbllst x, sys_tbllst y, sys_tbllnk st, sys_otyp ot, arc_db_schema sch, arc_services_info si, ARC_STORAGE_TYPE ast
where y.ID = st.id_lsttbl
                and x.ID = st.id_dsttbl
                and x.id_type = ot.id
                and ot.define_alias = 'ARH'
                and si.ID_DB_SCHEMA = sch.ID
                and si.ID_LSTTBL = y.ID
                and ast.ID = sch.ID_STORAGE_TYPE
                and y.ID = {0}
              order by y.id</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE_ALL" xml:space="preserve">
    <value>SELECT  asp.ID,asp.ID_TBLLST,asp.ID_GINFO
FROM  ARC_SUBSYST_PROFILE asp
</value>
  </data>
  <data name="SYS_GTOPT_LIST_V" xml:space="preserve">
    <value>SELECT 
  sg1.ID,sg1.NAME
  ,sg1.DEFINE_ALIAS
  ,sg1.INTERVAL as "Interval (sec)" 
  ,'0' as "Archive Type"
  ,sg2.DEFINE_ALIAS as "DataType" 
 FROM SYS_GTOPT sg1, SYS_GTYP sg2
 WHERE sg1.ID_ATYPE is null and sg2.id=sg1.ID_GTYPE
 union 
SELECT 
  sg1.ID,sg1.NAME
  ,sg1.DEFINE_ALIAS
  ,sg1.INTERVAL as "Interval (sec)" 
  ,sa.NAME as "Archive Type" 
  ,sg2.DEFINE_ALIAS as "DataType" 
FROM SYS_GTOPT sg1, SYS_ATYP sa, SYS_GTYP sg2
 WHERE sg1.ID_ATYPE=sa.ID and sg2.id=sg1.ID_GTYPE</value>
  </data>
  <data name="ARC_VIEW_PARTITIONS1" xml:space="preserve">
    <value>SELECT ID,ID_GINFO,ID_TBLLST,DEPTH,IS_ACTIVE,TABLE_NAME,DT_START,DT_END
   , '0' AS CNT, FROM_DT1970(DT_START) AS DATESTART,  FROM_DT1970(DT_END) AS DATEEND 
FROM  {0}
WHERE ID_GINFO= {1} AND ID_TBLLST= {2}
ORDER BY ID</value>
  </data>
  <data name="ARC_VIEW_PARTITIONS2" xml:space="preserve">
    <value>SELECT ID,ID_GINFO,ID_TBLLST,DEPTH,IS_ACTIVE,TABLE_NAME,DT_START,DT_END
   , '0' AS CNT, '0' AS DATESTART,  '0' AS DATEEND
FROM  {0}
WHERE ID_GINFO= {1} AND ID_TBLLST= {2}
ORDER BY ID</value>
  </data>
  <data name="MEAS_SNAPSHOT30_TUNE_t" xml:space="preserve">
    <value>SELECT mst.ID, ot.NAME as Object, mst.PARAM_TYPE, mst.NAME, mst.STATUS, mst.DT1970
-- FROM MEAS_SNAPSHOT30_TUNE mst, OBJ_TREE ot
FROM {0} mst, {1} ot
WHERE mst.ID_OBJ=ot.ID</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="v1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="v2" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="v3" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PXtEk8Rs33gAAAAASUVORK5CYII=
</value>
  </data>
  <data name="v4" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PHREG_LIST_V0" xml:space="preserve">
    <value>PHREG_LIST_V
 </value>
  </data>
  <data name="ELREG_LIST_V0" xml:space="preserve">
    <value>ELREG_LIST_V</value>
  </data>
  <data name="PSWT_LIST_V0" xml:space="preserve">
    <value>PSWT_LIST_V</value>
  </data>
  <data name="AUTO_LIST_V0" xml:space="preserve">
    <value>AUTO_LIST_V</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE5" xml:space="preserve">
    <value>SELECT  a.ID, a.ID_GINFO, ARC_GINFO.NAME, ARC_GINFO.ID_GTOPT, SYS_GTOPT.NAME
FROM  ARC_SUBSYST_PROFILE a, ARC_GINFO, SYS_GTOPT
WHERE a.ID_GINFO=ARC_GINFO.ID
AND SYS_GTOPT.ID=ARC_GINFO.ID_GTOPT 
AND SYS_GTOPT.DEFINE_ALIAS NOT LIKE 'GLT_ANALOG_OPT_INSTANT%' 
AND SYS_GTOPT.DEFINE_ALIAS NOT LIKE 'GLT_ANALOG_OPT_CUR%' 
AND SYS_GTOPT.DEFINE_ALIAS NOT LIKE 'GLT_DANALOG_OPT_INSTANT%' 
AND a.ID_TBLLST={0}</value>
  </data>
  <data name="PHREG_LIST_V00" xml:space="preserve">
    <value>SELECT ID, id_obj as id_node, id_meas_type, NAME, alias
     FROM meas_list
    WHERE id_meas_type IN (
  -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t
  --  WHERE m.id_type = t.ID
  --    AND t.id_node &lt;&gt; 1
  --    AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
  --    AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
  --    AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
  --    AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   SELECT ID FROM phreg_tlist_v
   ) </value>
  </data>
  <data name="ELREG_LIST_V00" xml:space="preserve">
    <value>SELECT ID, id_obj as id_node, id_meas_type, NAME, alias
FROM meas_list
WHERE id_meas_type IN (
 -- SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
 SELECT ID FROM ELREG_TLIST_V
)</value>
  </data>
  <data name="v1text" xml:space="preserve">
    <value>CREATE [OR REPLACE] [PUBLIC] SYNONYM [schema .] synonym_name  FOR [schema .] object_name [@ dblink];

DROP [PUBLIC] SYNONYM [schema .] synonym_name [force];

rdarchd  тогда ничего не знает об архивном сервере , и чсе архивы читает через основной.
Тогда  синонимы на архивы  на основном должны указывать на  архивный.
проверить  синонимы  на партиции на основном 

select * from all_synonyms where table_owner like 'RSDU2DAARH' and owner like 'PUBLIC' and table_name like 'DA_ARC_54%';
select * from all_synonyms where table_owner like 'RSDU2DAARH' and owner like 'PUBLIC' and table_name like 'DA_ARC_3000842%';

select 'create or replace public synonym '||a.table_name ||' for '||sh.schema_name ||'.' ||a.table_name as "-- str "  
 from arc_view_partitions   a
 join arc_services_info i on i.id_lsttbl = a.id_tbllst and id_tbllst =  ????????
 join arc_db_schema  sh on sh.id = i.id_db_schema   and schema_name like 'RSDU2DAARH'

select * from all_synonyms where table_owner like 'RSDU2DAARH' and owner like 'PUBLIC' and table_name like 'DA_ARC_???????????%';

select 'CREATE OR REPLACE PUBLIC SYNONYM '||SYNONYM_NAME||' FOR '||SYNONYM_NAME||'@RSDUARC.RSDU.GRES.ORG;' AS O
from all_synonyms where table_owner like 'RSDU2DAARH' and owner like 'PUBLIC' and table_name like 'DA_ARC_???????????%';

</value>
  </data>
  <data name="v2text" xml:space="preserve">
    <value>данные по границам  партиций  в ARC_VIEW_PARTITION  обновляются  в  основной , а в  архивной БД  данные этой таблицы не синхронизируются с основной, поэтому один последний час берёт из РВ.
проверить запросом  - подключаемся к архивному серверу

select b.id, a.id as id_arc, b.table_name, from_dt1970(b.dt_start) dt1_base, from_dt1970(a.dt_start) dt1_arc
 from arc_view_partitions @rsdu.gtes.ema   b
 left join  arc_view_partitions @rsduarc.gtes.ema  a on  a.id_tbllst = b.id_tbllst and a.id_ginfo= b.id_ginfo and a.id = b.id
 where b.id_tbllst =  ??????????? ;
 
Если дата  партиции на основном (dt1_base)  новее чем  на архивном , значит,  имеем именно эту проблему.
Если  наоборот на архивном свежее данные ,  то  -Внимание!- тогда  дальше пока не делаем. 
проверить работу если бы они были синхронизированы так: обновить даты на архивном  (работаем на архивном сервере)

truncate table arc_view_partitions;
insert into arc_view_partitions select * from arc_view_partitions@rsdu;
commit;

После этого проверить отображение  данных в ретроспективе - показывает ли  за  больший период, чем час. 
Если  в ретро всё будет нормально, тогда будем  решать , как синхронизировать  таблицы, ведь репликации данных оракловой там, скорее всего нет, надо программно.

-------------------------------

На архивном нет  таблицы  ARC_VIEW_PARTITIONS - здесь такая реализация. Нечего синхронизировать.
Все должно читаться  с основного.  и  на Архивном , получается нет функции ARC_GET_INSTANT,  а это неправильно.
Она  нужна rdarchd для чтения. Надо создать .
Прилагаю 2 файла ,

ARC_ROW_TYPE.type.sql
ARC_GET_INSTANT_on_RSDUARC.new.sql

надо выполнить на АРХивном сервере под RSDUADMIN именно в таком порядке  -  сначала создать тип , потом функцию.
После  создания  проверить , что  они не инвалидные  а затем попробовать  в ретро посмотреть за период больше часа.
</value>
  </data>
  <data name="EXDATA_LIST_V0" xml:space="preserve">
    <value>EXDATA_LIST_V</value>
  </data>
  <data name="EXDATA_LIST_V00" xml:space="preserve">
    <value>SELECT ID, ID_OBJ AS ID_NODE, ID_MEAS_TYPE, NAME, ALIAS
  FROM MEAS_LIST
  WHERE IS_EXDATA = 1</value>
  </data>
  <data name="FormArc_db_schema_ch1" xml:space="preserve">
    <value>select id,id_parent, name, id_lsttbl 
from sys_tree21 
where id_parent in (
select distinct id_parent from sys_tree21 where id_lsttbl in 
(select id from sys_tbllst where id_type in
(select id from sys_otyp where define_alias like 'LST') 
and id_node in 
(select id from sys_db_part where id_parent in 
(select id from sys_db_part where define_alias like 'MODEL_SUBSYST' or define_alias like 'DA_SUBSYST' ))))
ORDER BY ID_PARENT</value>
  </data>
</root>