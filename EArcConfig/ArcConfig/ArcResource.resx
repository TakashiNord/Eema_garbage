<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EXDATA_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj AS id_node, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE  is_exdata = 1
 UNION
SELECT ID, id_obj AS id_node, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list , MEAS_ARC
WHERE  is_exdata = 1
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC   </value>
    <comment>exdata_list_v</comment>
  </data>
  <data name="ELREG_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias , 0 as  ID_GINFO
FROM meas_list 
WHERE id_meas_type IN (                       
 SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
) AND is_exdata = 0
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias , MEAS_ARC.ID_GINFO  as  ID_GINFO
FROM meas_list , MEAS_ARC
WHERE id_meas_type IN (                       
  SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
) AND is_exdata = 0
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC  </value>
  </data>
  <data name="PHREG_LIST_V" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (
   SELECT m.ID FROM sys_meas_types m, sys_ptyp t
    WHERE m.id_type = t.ID 
      AND t.id_node &lt;&gt; 1
      AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
      AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   ) AND is_exdata = 0
  UNION
  SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list, MEAS_ARC
    WHERE id_meas_type IN (
   SELECT m.ID FROM sys_meas_types m, sys_ptyp t
    WHERE m.id_type = t.ID 
      AND t.id_node &lt;&gt; 1
      AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
      AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   ) AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC   </value>
  </data>
  <data name="AUTO_LIST_V" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
      AND is_exdata = 0
  UNION
    SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list , MEAS_ARC
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
      AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="PSWT_LIST_V" xml:space="preserve">
    <value>   SELECT ID, id_obj, id_meas_type, NAME, alias, '0' as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
      AND is_exdata = 0
  UNION
   SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list, MEAS_ARC
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
      AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC </value>
  </data>
  <data name="EA_CHANNELS" xml:space="preserve">
    <value>   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM EA_CHANNELS
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , EA_ARC.ID_GINFO as ID_GINFO
     FROM EA_CHANNELS, EA_ARC
   WHERE 
   EA_CHANNELS.ID=EA_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="CALC_LIST" xml:space="preserve">
    <value>   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM CALC_LIST
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , CALC_ARC.ID_GINFO as ID_GINFO
     FROM CALC_LIST , CALC_ARC
   WHERE 
   CALC_LIST.ID=CALC_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="DG_LIST" xml:space="preserve">
    <value>   SELECT ID, id_node, 0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM DG_LIST
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , DG_ARC.ID_GINFO as ID_GINFO
     FROM DG_LIST , DG_ARC
   WHERE 
   DG_LIST.ID=DG_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="EA_V_CONSUMER_POINTS" xml:space="preserve">
    <value>   SELECT ea_points.ID, ea_points.id_node,
          ea_points.id_type, ea_points.NAME,
          ea_points.alias, 0 as ID_GINFO
     FROM ea_channels ea_points, ea_consumer_link
    WHERE ea_points.ID = ea_consumer_link.id_point(+) 
    UNION
   SELECT ea_points.ID, ea_points.id_node,
          ea_points.id_type, ea_points.NAME,
          ea_points.alias, EA_ARC.ID_GINFO as ID_GINFO
     FROM ea_channels ea_points, ea_consumer_link, EA_ARC
    WHERE ea_points.ID = ea_consumer_link.id_point(+)
 AND ea_points.ID = EA_ARC.ID_PARAM
  ORDER BY ID ASC </value>
  </data>
  <data name="DA_V_LST" xml:space="preserve">
    <value>SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID, {0}.ID_TYPE, {0}.NAME, 0 as ID_GINFO
FROM {0}, DA_CAT
WHERE 
 DA_CAT.ID={0}.ID_NODE
UNION
SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID, {0}.ID_TYPE, {0}.NAME, DA_ARC.ID_GINFO as ID_GINFO
FROM {0}, DA_CAT, DA_ARC
WHERE {0}.ID=DA_ARC.ID_PARAM
and DA_CAT.ID={0}.ID_NODE
ORDER BY ID_NODE, ID </value>
  </data>
  <data name="ARC_GINFO1" xml:space="preserve">
    <value>SELECT 
    ARC_GINFO.ID as ID, 
    sys_gtopt.NAME as VIEW_ARCHIVE,
    ARC_GINFO.ID_GTOPT , 
    ARC_TYPE.NAME as TYPE_ARCHIVE, 
    ARC_GINFO.ID_TYPE as ID_TYPE, 
    ARC_GINFO.DEPTH , 
    ARC_GINFO.DEPTH_LOCAL , 
    ARC_GINFO.CACHE_SIZE , 
    ARC_GINFO.CACHE_TIMEOUT ,
    ARC_GINFO.FLUSH_INTERVAL ,
    ARC_GINFO.RESTORE_INTERVAL ,
    ARC_GINFO.STACK_INTERVAL , 
    ARC_GINFO.WRITE_MINMAX  , 
    ARC_GINFO.RESTORE_TIME , 
    ARC_GINFO.NAME  , 
    ARC_GINFO.STATE  , 
    ARC_GINFO.DEPTH_PARTITION  , 
    ARC_GINFO.RESTORE_TIME_LOCAL 
 FROM ARC_GINFO , sys_gtopt, ARC_TYPE
 WHERE sys_gtopt.ID=ARC_GINFO.ID_GTOPT 
AND ARC_GINFO.ID_TYPE=ARC_TYPE.ID</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE1" xml:space="preserve">
    <value>SELECT  ARC_SUBSYST_PROFILE.ID,ARC_SUBSYST_PROFILE.ID_TBLLST,ARC_SUBSYST_PROFILE.ID_GINFO, 
  ARC_SUBSYST_PROFILE.IS_WRITEON, ARC_SUBSYST_PROFILE.STACK_NAME,ARC_SUBSYST_PROFILE.LAST_UPDATE,ARC_SUBSYST_PROFILE.IS_VIEWABLE 
FROM  ARC_SUBSYST_PROFILE 
WHERE  {0}=ARC_SUBSYST_PROFILE.ID_TBLLST</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE2" xml:space="preserve">
    <value>SELECT  ARC_SUBSYST_PROFILE.ID, ARC_SUBSYST_PROFILE.ID_GINFO, ARC_GINFO.NAME, SYS_GTOPT.NAME 
FROM  ARC_SUBSYST_PROFILE , ARC_GINFO, SYS_GTOPT 
WHERE {0}=ARC_SUBSYST_PROFILE.ID_TBLLST  
AND ARC_SUBSYST_PROFILE.ID_GINFO=ARC_GINFO.ID 
AND SYS_GTOPT.ID=ARC_GINFO.ID_GTOPT </value>
  </data>
</root>