<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EXDATA_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj AS id_node, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE  is_exdata = 1
 UNION
SELECT ID, id_obj AS id_node, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list , MEAS_ARC
WHERE  is_exdata = 1
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC   </value>
    <comment>exdata_list_v</comment>
  </data>
  <data name="ELREG_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias , 0 as  ID_GINFO
FROM meas_list
WHERE id_meas_type IN (
 SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
) AND is_exdata = 0
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias , MEAS_ARC.ID_GINFO  as  ID_GINFO
FROM meas_list , MEAS_ARC
WHERE id_meas_type IN (
  SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
) AND is_exdata = 0
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC  </value>
  </data>
  <data name="PHREG_LIST_V" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (
   SELECT m.ID FROM sys_meas_types m, sys_ptyp t
    WHERE m.id_type = t.ID
      AND t.id_node &lt;&gt; 1
      AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
      AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   ) AND is_exdata = 0
  UNION
  SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list, MEAS_ARC
    WHERE id_meas_type IN (
   SELECT m.ID FROM sys_meas_types m, sys_ptyp t
    WHERE m.id_type = t.ID
      AND t.id_node &lt;&gt; 1
      AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
      AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   ) AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC   </value>
  </data>
  <data name="AUTO_LIST_V" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
      AND is_exdata = 0
  UNION
    SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list , MEAS_ARC
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
      AND is_exdata = 0
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="PSWT_LIST_V" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
AND is_exdata = 0
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list, MEAS_ARC
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
 AND is_exdata = 0
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
ORDER BY ID ASC </value>
  </data>
  <data name="EA_CHANNELS" xml:space="preserve">
    <value>   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM EA_CHANNELS
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , EA_ARC.ID_GINFO as ID_GINFO
     FROM EA_CHANNELS, EA_ARC
   WHERE
   EA_CHANNELS.ID=EA_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="CALC_LIST" xml:space="preserve">
    <value>   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM CALC_LIST
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , CALC_ARC.ID_GINFO as ID_GINFO
     FROM CALC_LIST , CALC_ARC
   WHERE
   CALC_LIST.ID=CALC_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="DG_LIST" xml:space="preserve">
    <value>   SELECT ID, id_node, 0 as ID_TYPE, NAME, alias , 0 as ID_GINFO
     FROM DG_LIST
   UNION
   SELECT ID, id_node,  0 as ID_TYPE, NAME, alias , DG_ARC.ID_GINFO as ID_GINFO
     FROM DG_LIST , DG_ARC
   WHERE
   DG_LIST.ID=DG_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="EA_V_CONSUMER_POINTS" xml:space="preserve">
    <value>   SELECT ea_points.ID, ea_points.id_node,
          ea_points.id_type, ea_points.NAME,
          ea_points.alias, 0 as ID_GINFO
     FROM ea_channels ea_points, ea_consumer_link
    WHERE ea_points.ID = ea_consumer_link.id_point(+)
    UNION
   SELECT ea_points.ID, ea_points.id_node,
          ea_points.id_type, ea_points.NAME,
          ea_points.alias, EA_ARC.ID_GINFO as ID_GINFO
     FROM ea_channels ea_points, ea_consumer_link, EA_ARC
    WHERE ea_points.ID = ea_consumer_link.id_point(+)
 AND ea_points.ID = EA_ARC.ID_PARAM
  ORDER BY ID ASC </value>
  </data>
  <data name="DA_V_LST" xml:space="preserve">
    <value>   SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID,
          (CASE
              WHEN REGEXP_LIKE (gt.define_alias, 'ANALOG')
                 THEN 'ТИ'
              WHEN REGEXP_LIKE (gt.define_alias, 'TELECONTROL')
                 THEN 'ТУ'
              WHEN REGEXP_LIKE (gt.define_alias, 'BOOL')
                 THEN 'ТС'
              ELSE '??'
           END
          ) AS ID_TYPE,
          {0}.NAME,
          0 as ID_GINFO
     FROM DA_CAT 
     JOIN {0} ON DA_CAT.ID = {0}.ID_NODE
     JOIN da_param da ON da.ID =  {0}.ID  
     JOIN da_dev_desc dd ON dd.ID = da.id_point
     LEFT JOIN sys_gtopt gt ON gt.ID = dd.id_gtopt
UNION
   SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID,
          (CASE
              WHEN REGEXP_LIKE (gt.define_alias, 'ANALOG')
                 THEN 'ТИ'
              WHEN REGEXP_LIKE (gt.define_alias, 'TELECONTROL')
                 THEN 'ТУ'
              WHEN REGEXP_LIKE (gt.define_alias, 'BOOL')
                 THEN 'ТС'
              ELSE '??'
           END
          ) AS ID_TYPE,
          {0}.NAME,
          DA_ARC.ID_GINFO as ID_GINFO
     FROM DA_CAT 
     JOIN {0} ON DA_CAT.ID = {0}.ID_NODE
     JOIN DA_ARC ON {0}.ID = DA_ARC.ID_PARAM
     JOIN da_param da ON da.ID = {0}.ID  
     JOIN da_dev_desc dd ON dd.ID = da.id_point
     LEFT JOIN sys_gtopt gt ON gt.ID = dd.id_gtopt
ORDER BY ID_NODE, ID</value>
  </data>
  <data name="ARC_GINFO1" xml:space="preserve">
    <value>SELECT
    ARC_GINFO.ID as ID,
    sys_gtopt.NAME as VIEW_ARCHIVE,
    ARC_GINFO.ID_GTOPT ,
    sys_gtopt.DEFINE_ALIAS as DEFINE_ALIAS,
    ARC_TYPE.NAME as TYPE_ARCHIVE,
    ARC_GINFO.ID_TYPE as ID_TYPE,
    ARC_GINFO.DEPTH ,
    ARC_GINFO.DEPTH_LOCAL ,
    ARC_GINFO.CACHE_SIZE ,
    ARC_GINFO.CACHE_TIMEOUT ,
    ARC_GINFO.FLUSH_INTERVAL ,
    ARC_GINFO.RESTORE_INTERVAL ,
    ARC_GINFO.STACK_INTERVAL ,
    ARC_GINFO.WRITE_MINMAX  ,
    ARC_GINFO.RESTORE_TIME ,
    ARC_GINFO.NAME  ,
    ARC_GINFO.STATE  ,
    ARC_GINFO.DEPTH_PARTITION  ,
    ARC_GINFO.RESTORE_TIME_LOCAL
 FROM ARC_GINFO , sys_gtopt, ARC_TYPE
 WHERE sys_gtopt.ID=ARC_GINFO.ID_GTOPT
AND ARC_GINFO.ID_TYPE=ARC_TYPE.ID
ORDER BY ARC_GINFO.ID ASC</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE1" xml:space="preserve">
    <value>SELECT  ARC_SUBSYST_PROFILE.ID,ARC_SUBSYST_PROFILE.ID_TBLLST,ARC_SUBSYST_PROFILE.ID_GINFO,
  ARC_SUBSYST_PROFILE.IS_WRITEON, ARC_SUBSYST_PROFILE.STACK_NAME,ARC_SUBSYST_PROFILE.LAST_UPDATE,ARC_SUBSYST_PROFILE.IS_VIEWABLE
FROM  ARC_SUBSYST_PROFILE
WHERE  {0}=ARC_SUBSYST_PROFILE.ID_TBLLST</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE2" xml:space="preserve">
    <value>SELECT  ARC_SUBSYST_PROFILE.ID, ARC_SUBSYST_PROFILE.ID_GINFO, ARC_SUBSYST_PROFILE.IS_WRITEON, ARC_GINFO.NAME, SYS_GTOPT.NAME
FROM  ARC_SUBSYST_PROFILE , ARC_GINFO, SYS_GTOPT
WHERE ARC_SUBSYST_PROFILE.ID_GINFO=ARC_GINFO.ID
AND SYS_GTOPT.ID=ARC_GINFO.ID_GTOPT 
AND ARC_SUBSYST_PROFILE.ID_TBLLST={0}</value>
  </data>
  <data name="ARH_SYSTBLLST1" xml:space="preserve">
    <value>SELECT upper(lst.table_name) , lnk.ID_LSTTBL
FROM sys_tbllst lst, sys_tbllnk lnk, sys_otyp t
WHERE lnk.id_dsttbl = lst.ID  AND lst.id_type = t.ID AND t.define_alias LIKE 'ARH'
 AND  lnk.id_lsttbl = {0}</value>
  </data>
  <data name="TABLEOPTION" xml:space="preserve">
    <value>SELECT 'min' as num, TIME1970 as T FROM {0} WHERE TIME1970 = (SELECT MIN(TIME1970) FROM {0} )
union
SELECT 'max' as num, TIME1970 as T FROM {0}  WHERE TIME1970 = (SELECT MAX(TIME1970) FROM {0} )
union
SELECT 'cnt' as num, count(*) as T FROM {0}</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE_ID" xml:space="preserve">
    <value>SELECT ID+1 FROM ARC_SUBSYST_PROFILE WHERE ID+1 NOT IN (SELECT ID FROM ARC_SUBSYST_PROFILE )</value>
  </data>
  <data name="AD_SERVICE1" xml:space="preserve">
    <value>SELECT  ad_pinfo.portnumber,ad_pinfo.id_proto,ad_sinfo.id_lsttbl,ad_list.id_type, sys_otyp.alias,ad_service.NAME,ad_service.define_alias
 FROM ad_dir,ad_dir dir1,ad_list,ad_pinfo,ad_ncard,ad_sinfo,sys_otyp,ad_service,ad_hosts
 WHERE ad_sinfo.id_server_node = ad_dir.ID
 AND ad_list.id_node = ad_dir.ID
 AND ad_pinfo.id_param = ad_list.ID
 AND ad_pinfo.id_intrface_node = ad_ncard.id_node
 AND ad_list.id_type = sys_otyp.ID
 AND ad_pinfo.portnumber = ad_service.ID
 AND ad_pinfo.id_intrface_node = dir1.ID
 AND dir1.id_parent = ad_hosts.id_host_node
 AND ad_pinfo.id_proto &gt; 2 AND ad_pinfo.id_proto &lt;&gt; 9
 AND ad_dir.ID IN (SELECT ad_dir.ID FROM ad_dir WHERE ad_dir.id_type &gt; 1000)
 AND ad_sinfo.ID_LSTTBL= {0}
  UNION
 SELECT  ad_pinfo.portnumber,ad_pinfo.id_proto,ad_sinfo.id_lsttbl,ad_list.id_type, sys_otyp.alias,ad_service.NAME,ad_service.define_alias
 FROM ad_dir,ad_dir dir1,ad_list,ad_pinfo,ad_ipinfo,ad_sinfo,sys_otyp,ad_service,ad_hosts
  WHERE ad_sinfo.id_server_node = ad_dir.ID
 AND ad_list.id_node = ad_dir.ID
 AND ad_pinfo.id_param = ad_list.ID
 AND ad_pinfo.id_intrface_node = ad_ipinfo.id_node
 AND ad_list.id_type = sys_otyp.ID
 AND ad_pinfo.portnumber = ad_service.ID
 AND ad_pinfo.id_intrface_node = dir1.ID
 AND dir1.id_parent = ad_hosts.id_host_node
 AND ((ad_pinfo.id_proto &lt;= 2) OR (ad_pinfo.id_proto = 9))
 AND ad_dir.ID IN (SELECT ad_dir.ID FROM ad_dir WHERE ad_dir.id_type &gt; 1000)
 AND ad_sinfo.ID_LSTTBL={0} </value>
  </data>
  <data name="SCHEMA_NAME" xml:space="preserve">
    <value>SELECT DISTINCT a.id ,  sch.schema_name
FROM  arc_db_schema sch, arc_services_info si,  sys_tbllst a
WHERE a.ID = si.id_lsttbl AND si.id_db_schema = sch.ID and a.ID ={0}</value>
  </data>
  <data name="TABLE_ARC" xml:space="preserve">
    <value>SELECT  a.table_name
FROM   sys_tbllst a, SYS_TBLLNK b
WHERE  b.ID_DSTTBL=a.id and a.DEFINE_ALIAS like '%ARH%' and b.ID_LSTTBL={0}</value>
  </data>
  <data name="ARC_GINFO2" xml:space="preserve">
    <value>SELECT ID_GTOPT  FROM ARC_GINFO WHERE ID={0}</value>
  </data>
  <data name="arc_stat_avg_v" xml:space="preserve">
    <value>   SELECT   from_dt1970 (arc_subsyst_profile.last_update) last_update,
            arc_stat.avg_process, arc_stat.avg_insert, arc_stat.avg_row,
            arc_stat.avg_error, sys_gtopt.alias opt_alias,
            sys_tbllst.table_name tbl_name
       FROM sys_tbllst, sys_gtopt, arc_stat, arc_ginfo, arc_subsyst_profile
      WHERE sys_tbllst.ID = arc_stat.id_tbllst
        AND sys_gtopt.ID = arc_ginfo.id_gtopt
        AND arc_stat.id_ginfo = arc_ginfo.ID
        AND arc_subsyst_profile.id_tbllst = arc_stat.id_tbllst
        AND arc_subsyst_profile.id_ginfo = arc_stat.id_ginfo
   ORDER BY arc_stat.id_tbllst, arc_stat.id_ginfo</value>
  </data>
  <data name="arc_stat_current_v" xml:space="preserve">
    <value>  SELECT   from_dt1970 (arc_subsyst_profile.last_update) last_update,
            arc_stat.cur_process, arc_stat.cur_insert, arc_stat.cur_row,
            arc_stat.cur_error, sys_gtopt.alias opt_alias,
            sys_tbllst.table_name tbl_name
       FROM sys_tbllst, sys_gtopt, arc_stat, arc_ginfo, arc_subsyst_profile
      WHERE sys_tbllst.ID = arc_stat.id_tbllst
        AND sys_gtopt.ID = arc_ginfo.id_gtopt
        AND arc_stat.id_ginfo = arc_ginfo.ID
        AND arc_subsyst_profile.id_tbllst = arc_stat.id_tbllst
        AND arc_subsyst_profile.id_ginfo = arc_stat.id_ginfo
   ORDER BY arc_stat.id_tbllst, arc_stat.id_ginfo</value>
  </data>
  <data name="arc_retroviewable_v" xml:space="preserve">
    <value>   SELECT p.id_tbllst, db.NAME AS tbllst_name, t.NAME AS tbllst_tblname,
          ta.NAME AS arc_tblname, ag.id_gtopt, gt.NAME AS gtopt_name,
          gt.alias AS gtopt_alias, gt.INTERVAL AS gtopt_interval, p.id_ginfo,
          ag.NAME AS ginfo_name, acc.retro_depth
     FROM arc_subsyst_profile p,
          sys_db_part db,
          sys_tbllst t,
          sys_tbllst ta,
          sys_tbllnk tlnk,
          arc_ginfo ag,
          sys_gtopt gt,
          arc_services_access acc
    WHERE t.ID = p.id_tbllst
      AND db.ID = t.id_node
      AND tlnk.id_lsttbl = p.id_tbllst
      AND ta.ID = tlnk.id_dsttbl
      AND ta.id_type = 1021
      AND ag.ID = p.id_ginfo
      AND gt.ID = ag.id_gtopt
      AND p.ID = acc.id_sprofile(+)
      AND is_viewable = 1</value>
  </data>
  <data name="DA_V_LST_TMP" xml:space="preserve">
    <value>SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID, {0}.ID_TYPE, {0}.NAME, 0 as ID_GINFO
FROM {0}, DA_CAT
WHERE
 DA_CAT.ID={0}.ID_NODE
UNION
SELECT {0}.ID_NODE, DA_CAT.NAME, {0}.ID, {0}.ID_TYPE, {0}.NAME, DA_ARC.ID_GINFO as ID_GINFO
FROM {0}, DA_CAT, DA_ARC
WHERE {0}.ID=DA_ARC.ID_PARAM
and DA_CAT.ID={0}.ID_NODE
ORDER BY ID_NODE, ID </value>
  </data>
  <data name="ARC_SUBSYST_PROFILE3" xml:space="preserve">
    <value>SELECT  ARC_SUBSYST_PROFILE.ID, ARC_SUBSYST_PROFILE.ID_GINFO, ARC_SUBSYST_PROFILE.IS_WRITEON 
FROM  ARC_SUBSYST_PROFILE 
WHERE {0}=ARC_SUBSYST_PROFILE.ID_TBLLST AND ARC_SUBSYST_PROFILE.ID_GINFO={1}</value>
  </data>
  <data name="FormSERVICE1" xml:space="preserve">
    <value>SELECT arcs.ID_SERVICE, ads.NAME , arcs.PRIORITY
FROM ARC_SERVICES_TUNE arcs, AD_SERVICE ads 
WHERE ads.ID=arcs.ID_SERVICE and arcs.ID_SPROFILE={0}
union
SELECT arcs.ID_SERVICE, '?????????????????' as NAME , 0 as PRIORITY
FROM ARC_SERVICES_TUNE arcs, AD_SERVICE ads 
WHERE arcs.ID_SERVICE not in (SELECT id FROM AD_SERVICE)
and arcs.ID_SPROFILE={0}</value>
  </data>
  <data name="FormSERVICE2" xml:space="preserve">
    <value>SELECT arcs.ID_SERVICE, ads.NAME , arcs.RETRO_DEPTH
FROM ARC_SERVICES_ACCESS arcs, AD_SERVICE ads 
WHERE ads.ID=arcs.ID_SERVICE and arcs.ID_SPROFILE={0}
union
SELECT arcs.ID_SERVICE, '?????????????????' as NAME , 0 as RETRO_DEPTH
FROM ARC_SERVICES_ACCESS arcs, AD_SERVICE ads 
WHERE arcs.ID_SERVICE not in (SELECT id FROM AD_SERVICE)
and arcs.ID_SPROFILE={0}</value>
  </data>
  <data name="ARH_SYSTBLLST2" xml:space="preserve">
    <value>select DISTINCT y.ID id_tbllst, y.table_name lst_tblname, x.table_name arc_tblname, sch.SCHEMA_NAME
               from sys_tbllst x, sys_tbllst y, sys_tbllnk st, sys_otyp ot, arc_db_schema sch, arc_services_info si
              where y.ID = st.id_lsttbl
                and x.ID = st.id_dsttbl
                and x.id_type = ot.id
                and ot.define_alias = 'ARH'
                and si.ID_DB_SCHEMA = sch.ID
                and si.ID_LSTTBL = y.ID
                and y.ID = {0}
              order by y.id</value>
  </data>
  <data name="TABLE_ARC1" xml:space="preserve">
    <value>SELECT upper(lst.TABLE_NAME) FROM sys_tbllst lst WHERE lst.ID={0}</value>
  </data>
  <data name="PHREG_LIST_V1" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (
   SELECT m.ID FROM sys_meas_types m, sys_ptyp t
    WHERE m.id_type = t.ID
      AND t.id_node &lt;&gt; 1
      AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
      AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   ) 
  UNION
  SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list, MEAS_ARC
    WHERE id_meas_type IN (
   SELECT m.ID FROM sys_meas_types m, sys_ptyp t
    WHERE m.id_type = t.ID
      AND t.id_node &lt;&gt; 1
      AND m.define_alias NOT LIKE ('MEAS_SWITCH_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_SIGNAL_STATE%')
      AND m.define_alias NOT LIKE ('MEAS_STATE_EQUIP')
      AND m.define_alias NOT LIKE ('MEAS_START_STOP')
   ) 
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC   </value>
  </data>
  <data name="ELREG_LIST_V1" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias , 0 as  ID_GINFO
FROM meas_list
WHERE id_meas_type IN (
 SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
) 
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias , MEAS_ARC.ID_GINFO  as  ID_GINFO
FROM meas_list , MEAS_ARC
WHERE id_meas_type IN (
  SELECT m.ID FROM sys_meas_types m, sys_ptyp t WHERE m.id_type = t.ID AND t.id_node = 1
) 
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
 ORDER BY ID ASC  </value>
  </data>
  <data name="PSWT_LIST_V1" xml:space="preserve">
    <value>SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
FROM meas_list
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
UNION
SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
FROM meas_list, MEAS_ARC
WHERE id_meas_type IN (SELECT ID FROM sys_meas_types WHERE define_alias LIKE 'MEAS_SWITCH_STATE%')
 AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
ORDER BY ID ASC </value>
  </data>
  <data name="AUTO_LIST_V1" xml:space="preserve">
    <value>  SELECT ID, id_obj, id_meas_type, NAME, alias, 0 as ID_GINFO
     FROM meas_list
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
  UNION
    SELECT ID, id_obj, id_meas_type, NAME, alias, MEAS_ARC.ID_GINFO as ID_GINFO
     FROM meas_list , MEAS_ARC
    WHERE id_meas_type IN (SELECT ID
                             FROM sys_meas_types
                            WHERE define_alias LIKE 'MEAS_SIGNAL_STATE%')
  AND MEAS_LIST.ID=MEAS_ARC.ID_PARAM
  ORDER BY ID ASC</value>
  </data>
  <data name="GTOPT2" xml:space="preserve">
    <value>SELECT sgt.ID, sgt.NAME, sgt.ALIAS, sgt.DEFINE_ALIAS, sgt.INTERVAL, 
sgtp.NAME as GTYP, sgtp.DEFINE_ALIAS as GTYPD, 
sat.NAME AS ATYP , sat.DEFINE_ALIAS AS ADEF 
FROM SYS_GTOPT sgt, SYS_GTYP sgtp, SYS_ATYP sat 
WHERE sgt.ID_GTYPE = sgtp.ID and sgt.ID_ATYPE = sat.ID 
UNION 
SELECT sgt.ID, sgt.NAME, sgt.ALIAS, sgt.DEFINE_ALIAS, sgt.INTERVAL, 
sgtp.NAME as GTYP, sgtp.DEFINE_ALIAS as GTYPD, 
'' AS ATYP , '' AS ADEF
FROM SYS_GTOPT sgt, SYS_GTYP sgtp  
WHERE sgt.ID_GTYPE = sgtp.ID and ( sgt.ID_ATYPE='' or sgt.ID_ATYPE is NULL )</value>
  </data>
  <data name="GTOPT1" xml:space="preserve">
    <value>SELECT 
  SYS_GTOPT.ID
  ,SYS_GTOPT.NAME
  ,SYS_GTYP.DEFINE_ALIAS as \"DataType\" 
  ,SYS_GTOPT.INTERVAL as \"Interval (sec)\"
  ,'0' as \"Archive Type\" 
FROM SYS_GTOPT, SYS_GTYP 
WHERE SYS_GTOPT.ID_ATYPE is null and SYS_GTYP.id=SYS_GTOPT.ID_GTYPE 
 union 
SELECT 
  SYS_GTOPT.ID
  ,SYS_GTOPT.NAME
  ,SYS_GTYP.DEFINE_ALIAS as \"DataType\" 
  ,SYS_GTOPT.INTERVAL as \"Interval (sec)\" 
  ,SYS_ATYP.NAME as \"Archive Type\" 
FROM SYS_GTOPT , SYS_ATYP, SYS_GTYP 
WHERE SYS_GTOPT.ID_ATYPE=SYS_ATYP.ID  and SYS_GTYP.id=SYS_GTOPT.ID_GTYPE 
</value>
  </data>
  <data name="ARH_SYSTBLLST3" xml:space="preserve">
    <value>select DISTINCT y.ID id_tbllst, sch.SCHEMA_NAME, ast.DEFINE_ALIAS
from sys_tbllst x, sys_tbllst y, sys_tbllnk st, sys_otyp ot, arc_db_schema sch, arc_services_info si, ARC_STORAGE_TYPE ast
where y.ID = st.id_lsttbl
                and x.ID = st.id_dsttbl
                and x.id_type = ot.id
                and ot.define_alias = 'ARH'
                and si.ID_DB_SCHEMA = sch.ID
                and si.ID_LSTTBL = y.ID
                and ast.ID = sch.ID_STORAGE_TYPE
                and y.ID = {0}
              order by y.id</value>
  </data>
  <data name="ARC_SUBSYST_PROFILE_ALL" xml:space="preserve">
    <value>SELECT  asp.ID,asp.ID_TBLLST,asp.ID_GINFO
FROM  ARC_SUBSYST_PROFILE asp
</value>
  </data>
  <data name="SYS_GTOPT_LIST_V" xml:space="preserve">
    <value>SELECT 
  sg1.ID,sg1.NAME
  ,sg1.DEFINE_ALIAS
  ,sg1.INTERVAL as "Interval (sec)" 
  ,'0' as "Archive Type"
  ,sg2.DEFINE_ALIAS as "DataType" 
 FROM SYS_GTOPT sg1, SYS_GTYP sg2
 WHERE sg1.ID_ATYPE is null and sg2.id=sg1.ID_GTYPE
 union 
SELECT 
  sg1.ID,sg1.NAME
  ,sg1.DEFINE_ALIAS
  ,sg1.INTERVAL as "Interval (sec)" 
  ,sa.NAME as "Archive Type" 
  ,sg2.DEFINE_ALIAS as "DataType" 
FROM SYS_GTOPT sg1, SYS_ATYP sa, SYS_GTYP sg2
 WHERE sg1.ID_ATYPE=sa.ID and sg2.id=sg1.ID_GTYPE</value>
  </data>
  <data name="ARC_VIEW_PARTITIONS1" xml:space="preserve">
    <value>SELECT ID,ID_GINFO,ID_TBLLST,DEPTH,IS_ACTIVE,TABLE_NAME,DT_START,DT_END
   , '0' AS CNT, FROM_DT1970(DT_START) AS DATESTART,  FROM_DT1970(DT_END) AS DATEEND 
FROM  {0}
WHERE ID_GINFO= {1} AND ID_TBLLST= {2}
ORDER BY ID</value>
  </data>
  <data name="ARC_VIEW_PARTITIONS2" xml:space="preserve">
    <value>SELECT ID,ID_GINFO,ID_TBLLST,DEPTH,IS_ACTIVE,TABLE_NAME,DT_START,DT_END
   , '0' AS CNT, '0' AS DATESTART,  '0' AS DATEEND
FROM  {0}
WHERE ID_GINFO= {1} AND ID_TBLLST= {2}
ORDER BY ID</value>
  </data>
  <data name="MEAS_SNAPSHOT30_TUNE_t" xml:space="preserve">
    <value>SELECT mst.ID, ot.NAME as Object, mst.PARAM_TYPE, mst.NAME, mst.STATUS, mst.DT1970
-- FROM MEAS_SNAPSHOT30_TUNE mst, OBJ_TREE ot
FROM {0} mst, {1} ot
WHERE mst.ID_OBJ=ot.ID</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="v1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>